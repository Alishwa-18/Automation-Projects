{
  "name": "Appointment Agent",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -288,
        -32
      ],
      "id": "fb567bee-0381-4073-bd02-8e0595322c9b",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "inoonmr@gmail.com",
          "mode": "list",
          "cachedResultName": "inoonmr@gmail.com"
        },
        "returnAll": true,
        "timeMax": "={{ $now.plus( 24,'hours') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        16,
        -32
      ],
      "id": "2e012af5-b336-4ba1-a388-e3f61e97bfe3",
      "name": "Get many events",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "RBafVd57pHrzF3rF",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Appointment Description : {{ $json.description }}\n\n\nStart time : {{ $json.start }}\n\nEnd time : {{ $json.end }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are an assistant. Generate a structured JSON object with the following fields:\n\nname: Full name of the recipient\n\nphone_number: Phone number as a string\n\nreason: Reason for the appointment\n\nstart_time: Start time in ISO 8601 date-time format\n\nend_time: End time in ISO 8601 date-time format\n\nemail: Email address of the recipient\n\nReturn the output only in valid JSON format. Do not include any additional text or comments.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        400,
        -32
      ],
      "id": "453e7e93-6f07-4cbf-ad87-0b4461a2dbdf",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        208,
        176
      ],
      "id": "aee8eca6-e89b-447f-8132-bddb196f679c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "TKjvUEtitD7SK5jg",
          "name": "OpenAi account 3"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "={\n  \"type\": \"object\",\n  \"properties\": {\n    \"output\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"type\": \"string\",\n          \"format\": \"email\"\n        },\n        \"phone_number\": {\n          \"type\": \"string\"\n        },\n        \"reason\": {\n          \"type\": \"string\"\n        },\n        \"start_time\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"end_time\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"email\",\n        \"phone_number\",\n        \"reason\",\n        \"start_time\",\n        \"end_time\"\n      ]\n    }\n  },\n  \"required\": [\"output\"]\n}\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        704,
        176
      ],
      "id": "ee5e03ee-5ebb-4d10-a8e2-c657be67d593",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        640,
        304
      ],
      "id": "8c3b13bd-13de-4fa5-9f60-c01e47921005",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "TKjvUEtitD7SK5jg",
          "name": "OpenAi account 3"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.retellai.com/v2/create-phone-call",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpCustomAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"from_number\": \"[YOUR NUMBER FROM RETELL AI (TWILLIO)]\",\n  \"to_number\": \"{{ $json.output.phone_number }}\",\n  \"retell_llm_dynamic_variables\": {\n    \"name\": \"{{ $json.output.name }}\",\n    \"phone_number\": \"{{ $json.output.phone_number }}\",\n    \"reason\": \"{{ $json.output.reason }}\",\n    \"start_time\": \"{{ $json.output.start_time }}\",\n    \"end_time\": \"{{ $json.output.end_time }}\"\n  },\n  \"override_agent_id\": \"[YOUR RETELL VOICE AI AGENT ID]\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        752,
        -32
      ],
      "id": "150a96f0-8217-4a85-8edc-ace2550bfc9d",
      "name": "HTTP Request",
      "credentials": {
        "httpCustomAuth": {
          "id": "mOyegF7Q3KRYDARg",
          "name": "Inoonmr Retell"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get many events",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many events": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9423bb61-af8c-44eb-9423-4eb29d19b67b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c3d640dde72ecd6d24bd7ff59452d7a79d550a0797d26c0fe0d195c6a4526ae6"
  },
  "id": "bCPK4oFOyc4AWig1",
  "tags": []
}